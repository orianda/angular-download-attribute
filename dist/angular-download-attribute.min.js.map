{"version":3,"sources":["angular-download-attribute.min.js"],"names":["angular","module","directive","$window","restrict","scope","link","$scope","$element","$attrs","blob","data","href","name","download","is","document","createElement","test","attr","navigator","msSaveOrOpenBlob","split","slice","join","decodeURIComponent","Blob","on","event","preventDefault"],"mappings":";;;;;;;;;AASAA,QAAQC,OAAO,iCAAkCC,UAAU,YACzD,UACA,SAAUC,GACR,YAEA,QACEC,SAAU,IACVC,OAAO,EACPC,KAAM,SAAUC,EAAQC,EAAUC,GAChC,GAEIC,GAFAC,EAAOF,EAAOG,KACdC,EAAOJ,EAAOK,QAMlB,IAAKN,EAASO,GAAG,QAOb,YAAcZ,GAAQa,SAASC,cAAc,MAAjD,CAOA,IAAK,UAAYC,KAAKP,GAEpB,WADAH,GAASW,KAAK,SAAU,SAO1B,KAAKhB,EAAQiB,UAAUC,iBAErB,WADAb,GAASW,KAAK,SAAU,SAI1BR,GAAOA,EAAKW,MAAM,KAAKC,MAAM,GAAGC,KAAK,KACrCb,EAAOc,mBAAmBd,GAC1BD,EAAO,GAAIgB,OAAMf,IAKjBH,EAASmB,GAAG,QAAS,SAAUC,GAC7BA,EAAMC,iBACN1B,EAAQiB,UAAUC,iBAAiBX,EAAMG","file":"angular-download-attribute.min.js","sourcesContent":["/*!\n * angular-download-attribute\n * AngularJS (v1) polyfill about the HTML5 download attribute for anchor elements.\n *\n * @version v1.0.0\n * @link https://github.com/orianda/angular-download-attribute\n * @author Orianda <orianda@paan.de>\n * @license MIT\n */\nangular.module('angular-download-attribute', []).directive('download', [\r\n  '$window',\r\n  function ($window) {\r\n    'use strict';\r\n\r\n    return {\r\n      restrict: 'A',\r\n      scope: false,\r\n      link: function ($scope, $element, $attrs) {\r\n        var data = $attrs.href;\r\n        var name = $attrs.download;\r\n        var blob;\r\n\r\n        /**\r\n         * Leave, if element is not a link element\r\n         */\r\n        if (!$element.is('a')) {\r\n          return;\r\n        }\r\n\r\n        /**\r\n         * Leave, if the download attribute is supported natively\r\n         */\r\n        if ('download' in $window.document.createElement('a')) {\r\n          return;\r\n        }\r\n\r\n        /**\r\n         * Add blank target if resource is not an embedded one\r\n         */\r\n        if (!(/^data:/i).test(data)) {\r\n          $element.attr('target', '_blank');\r\n          return;\r\n        }\r\n\r\n        /**\r\n         * Add blank target if fallback is not supported\r\n         */\r\n        if (!$window.navigator.msSaveOrOpenBlob) {\r\n          $element.attr('target', '_blank');\r\n          return;\r\n        }\r\n\r\n        data = data.split(',').slice(1).join(',');\r\n        data = decodeURIComponent(data);\r\n        blob = new Blob([data]);\r\n\r\n        /**\r\n         * Trigger download, when element is clicked\r\n         */\r\n        $element.on('click', function (event) {\r\n          event.preventDefault();\r\n          $window.navigator.msSaveOrOpenBlob(blob, name);\r\n        });\r\n      }\r\n    };\r\n  }\r\n]);\r\n\r\n"]}